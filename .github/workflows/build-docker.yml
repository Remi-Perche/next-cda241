name: CI docker
run-name: Build du docker sur l'istance et lancement
on: workflow_dispatch
jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Actions dans le SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd next-cda241/
            git pull origin master
  Build-docker:
    needs: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Récupère le code du repo
        uses: actions/checkout@v4
      - name: Récupère les autorisations git
        run: echo ${{ secrets.GIT_PAT }} | docker login ghcr.io -u Remi-Perche --password-stdin
      - name: Création de la nouvelle image
        run: docker build --platform linux/amd64 -t ghcr.io/remi-perche/next-cda241/next-app:latest .
      - name: Push de la nouvelle image sur git
        run: docker push ghcr.io/remi-perche/next-cda241/next-app
  Deploy-docker:
    needs: Build-docker
    runs-on: ubuntu-latest
    steps:
      - name: Mise en fichier de la clé SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa.pem
          chmod 600 ~/.ssh/id_rsa.pem
      - name: Ajout de l'instance dans les hôtes connus
        run: |
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Connection SSH avec pull et run de l'image docker
        run: |
            ssh -i ~/.ssh/id_rsa.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
                echo ${{ secrets.GIT_PAT }} | docker login ghcr.io -u Remi-Perche --password-stdin
                docker pull ghcr.io/remi-perche/next-cda241/next-app:latest
                docker run ghcr.io/remi-perche/next-cda241/next-app
            EOF